app:
  scheduler:
    enable: true
    interval: PT10S
    force-check-delay: PT10S
  git-hub-uri: "https://api.github.com/repos/"
  git-hub-token: ${GITHUB_TOKEN}
  stack-overflow-uri: "https://api.stackexchange.com/2.3/questions/"
  bot-uri: "http://localhost:8090"
  scrapper-topic:
    name: "scrapper.message"
  database-access-type: jdbc
  use-queue: true
spring:
  kafka:
    producer:
      clientId: test_producer
      acks: all
      batch-size: 100000
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  cache:
    cache-names:
      - rate-limit-buckets-4
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s
  main:
    allow-bean-definition-overriding: true
  application:
    name: scrapper
  datasource:
    url: jdbc:postgresql://localhost:5432/${SCRAPPER_DB_NAME}
    username: ${SCRAPPER_USERNAME}
    password: ${SCRAPPER_PASSWORD}
    driverClassName: org.postgresql.Driver
  liquibase:
    enabled: false


server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets-4
      url: .*
      strategy: first
      http-response-body: "{ \"code\": 429, \"error\": \"Too Many Requests\", \"description\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
        - cache-key: getRemoteAddr()
          bandwidths:
            - capacity: 100
              time: 1
              unit: hours

